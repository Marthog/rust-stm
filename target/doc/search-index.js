var searchIndex = {};
searchIndex['stm'] = {"items":[[0,"","stm","This library implements [software transactional memory]\n(https://en.wikipedia.org/wiki/Software_transactional_memory),\noften abbreviated with STM.",null,null],[3,"STM","","class representing a STM computation",null,null],[3,"Var","","A variable that can be used in a STM-Block",null,null],[4,"StmResult","","a result of each step of a STM calculation",null,null],[13,"Success","","the call succeeded",0,null],[13,"Failure","","the call failed. immediate return",0,null],[13,"Retry","","`retry` was called",0,null],[5,"retry","","call retry in `stm_call!` to let the STM manually run again",null,{"inputs":[],"output":{"name":"stm"}}],[11,"new","","create a new STM calculation from a closure",1,{"inputs":[{"name":"stm"},{"name":"f"}],"output":{"name":"stm"}}],[11,"intern_run","","run a computation and return the result",1,{"inputs":[{"name":"stm"}],"output":{"name":"stmresult"}}],[11,"atomically","","run a STM computation atomically",1,{"inputs":[{"name":"stm"}],"output":{"name":"t"}}],[11,"or","","if one of both computations fails with a call to retry\nthen run the other one",1,{"inputs":[{"name":"stm"},{"name":"stm"}],"output":{"name":"stm"}}],[11,"and","","run the first and afterwards the second one",1,{"inputs":[{"name":"stm"},{"name":"stm"}],"output":{"name":"stm"}}],[11,"and_then","","run the first and then applies the return value to the\nfunction `f` which returns a STM-Block that is then executed",1,{"inputs":[{"name":"stm"},{"name":"f"}],"output":{"name":"stm"}}],[11,"clone","","",2,{"inputs":[{"name":"var"}],"output":{"name":"var"}}],[11,"new","","create a new var",2,{"inputs":[{"name":"var"},{"name":"t"}],"output":{"name":"var"}}],[11,"read_atomic","","read a value atomically",2,{"inputs":[{"name":"var"}],"output":{"name":"t"}}],[11,"read_ref_atomic","","read a value atomically but return a reference",2,{"inputs":[{"name":"var"}],"output":{"name":"arc"}}],[11,"read","","the normal way to access a var",2,{"inputs":[{"name":"var"}],"output":{"name":"t"}}],[11,"write","","the normal way to write a var",2,{"inputs":[{"name":"var"},{"name":"t"}],"output":null}],[11,"wake_all","","wake all threads that are waiting for this value",2,{"inputs":[{"name":"var"}],"output":null}],[11,"control_block","","access the control block of the var",2,{"inputs":[{"name":"var"}],"output":{"name":"arc"}}],[14,"stm_call!","","call a STM function from inside of a STM block",null,null],[14,"stm!","","declare a block that uses STM",null,null]],"paths":[[4,"StmResult"],[3,"STM"],[3,"Var"]]};
initSearch(searchIndex);
